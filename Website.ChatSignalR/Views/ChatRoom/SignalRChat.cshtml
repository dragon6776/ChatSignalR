@using Website.ChatSignalR.Models
@{
    ViewBag.Title = "SignalRChat";
    var cookieCustomerId = System.Web.HttpContext.Current.Request.Cookies.Get(AppConstants.COOKIE_CHAT_CUSTOMERID)?.Value;  // Response.Cookies.Get(AppConstants.COOKIE_CHAT_CUSTOMERID)?.Value;
}

<h2>SignalRChat - <span id="ccc">'@cookieCustomerId'</span></h2>
<div id="container1">
    <div class="panel panel-default">
        <div class="panel-heading">SignalR Chat</div>
        <div class="panel-body">
            <div class="col-md-9">
                <input type="hidden" id="nickname" />
                <div id="chatlog"></div>

                <div id="chatarea">
                    <div class="messagelog">
                        <textarea spellcheck="true" id="message" class="messagebox form-control"></textarea>
                    </div>
                    <br />
                    <div class="actionpane">
                        <input type="button" id="btnsend" value="Send" class="btn btn-success" />
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <table class="table table-bordered table-striped" id="onlineusers">
                    <tr>
                        <td><b>Online Users</b></td>
                    </tr>
                </table>

            </div>
        </div>
    </div>
</div>


@section scripts{
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/Scripts/jquery.signalR-2.2.1.min.js")
    @Scripts.Render("/signalr/hubs")
    <script>

        var _chatCustomerId = "@cookieCustomerId";

        $(function () {
            //showModalUserNickName();
            startChatHub();
        });

        var domMethods = {
            appendNewOnlineUser: function (id, name, self) {
                var html = '';
                if (self === true) {
                    html = '<tr>' +
                                '<td>' + '<span class="border" style="color:green">You: ' + name + '</span>' + '</td>' +
                            '</tr>';
                } else {
                    html = '<tr>' +
                                '<td>' + '<a href="#" class="border" onclick="domMethods.loadConversationMessages(' + id + ')">' + name + '</a>' + '</td>' +
                            '</tr>';
                }

                $('#onlineusers').append(html);
            },
            //appendSelfOnlineUser: function (id, name) {
            //},
            appendNewMessageToChatLog: function (name, message) {
                $('#chatlog').append('<div class="border"><span style="color:orange">' + name + '</span>: ' + message + '</div>');
            },
            removeOnlineUser: function () {
                $('#onlineusers div').remove(":contains('" + name + "')");
            },
            notifyNewOtherJoining: function (id, name) {
                $('#chatlog').append('<div ><i>' + name + ' joins the conversation</i></div>');
            },
            notifyUserLeaving: function () {
                $('#chatlog').append('<div ><i>' + name + ' leaves the conversation</i></div>');
            },
            loadConversationMessages: function (toId) {
                debugger;
                $.ajax({
                    url: '/chatroom/LoadConversationMessages',
                    data: {
                        customerId: _chatCustomerId,
                        toCustomerId: toId,
                    },
                    success: function (data) {
                        data.forEach(function (item) {
                            domMethods.appendNewMessageToChatLog(item.name, item.message);
                        });

                        $('#chatlog').html(data);
                    }
                });
            }
        }

        function startChatHub() {
            var chat = $.connection.chatHub;

            // Get the user name.
            $('#nickname').val($('#nick').val());
            chat.client.differentName = function (name) {
                debugger;
                //showModalUserNickName();
                return false;
                // Prompts for different user name
                $('#nickname').val($('#nick').val());
                //chat.server.notify($('#nickname').val(), $.connection.hub.id);
            };

            chat.client.online = function (id, name) {
                // Update list of users
                if (id == _chatCustomerId) // (name == $('#nickname').val())
                    domMethods.appendNewOnlineUser(id, name, true);
                else {
                    domMethods.appendNewOnlineUser(id, name);
                }
            };

            chat.client.enters = function (id, name) {
                debugger;
                domMethods.notifyNewOtherJoining(id, name);
                //$("#users").append('<option value="' + id + '">' + name + '</option>');
                domMethods.appendNewOnlineUser(id, name);
            };
            // Create a function that the hub can call to broadcast chat messages.
            chat.client.broadcastMessage = function (name, message) {
                debugger;
                //Interpret smileys
                message = message.replace(":)", "<img src=\"/images/smile.gif\" class=\"smileys\" />");
                message = message.replace(":D", "<img src=\"/images/laugh.gif\" class=\"smileys\" />");
                message = message.replace(":o", "<img src=\"/images/cool.gif\" class=\"smileys\" />");

                //display the message
                domMethods.appendNewMessageToChatLog(name, message);
            };

            chat.client.disconnected = function (id, name) {
                //Calls when someone leaves the page
                domMethods.notifyUserLeaving(id, name);
                domMethods.removeOnlineUser(id, name);
                //$("#users option").remove(":contains('" + name + "')");
            }

            // Start the connection.
            $.connection.hub.start().done(function () {
                //Calls the notify method of the server
                //chat.server.notify($('#nickname').val(), $.connection.hub.id);
                //chat.server.notify();

                $('#btnsend').click(function () {
                    if ($("#users").val() == "All") {
                        // Call the Send method on the hub.
                        chat.server.send($('#nickname').val(), $('#message').val());
                    }
                    else {
                        chat.server.sendToSpecific($('#nickname').val(), $('#message').val(), $("#users").val());
                    }
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

            });
        }

    </script>
}